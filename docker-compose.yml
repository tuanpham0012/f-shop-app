services:
  sqlserver:
    container_name: sqlserver
    user: root
    image: mcr.microsoft.com/mssql/server:2022-latest
    environment:
      - SA_PASSWORD=Anhem123@
      - ACCEPT_EULA=Y
      - TZ=Asia/Ho_Chi_Minh
      - MSSQL_PID=Developer
    ports:
      - "1434:1433"
      - "5022:5022"
      - "5023:5023"
    volumes:
      - c:/volumes/shop_app/mssql/data:/var/opt/mssql/data
      - ./hosts:/etc/hosts
    restart: unless-stopped
    hostname: sqlserver
    # deploy:
    #   resources:
    #     limits:
    #       memory: 500MB  # Giới hạn RAM ở 4GB
    #     reservations:
    #       memory: 500MB  # Đặt trước 2GB RAM (tùy chọn, nhưng nên có)
    networks:
      - qipf-network
  redis:
    container_name: redis
    restart: always
    image: redis:latest
    ports:
      - "8003:6379"
    volumes:
      - c:/volumes/shop_app/redis/redis_data:/data
    networks:
      - qipf-network
  web-api:
    # container_name: web-api
    build:
      context: .
      dockerfile: ./server/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - TZ=Asia/Ho_Chi_Minh
      #- ASPNETCORE_URLS=http://+:80
      - "ConnectionStrings__DockerData=Server=sqlserver;Database=shop_app;User Id=sa;Password=Anhem123@;TrustServerCertificate=true"
    ports:
      - "8000:8080"
    depends_on:
      - sqlserver
    restart: unless-stopped
    networks:
      - qipf-network
    # deploy:
    #   replicas: 3

  web-app:
    container_name: web-app
    build:
      context: .
      dockerfile: ./client/Dockerfile
      args:
        - VITE_VUE_APP_ENV=development
    environment:
      - VITE_VUE_APP_ENV=development
      - TZ=Asia/Ho_Chi_Minh
    ports:
      - "8001:80"
    restart: unless-stopped
    networks:
      - qipf-network
  user-client-app:
      container_name: user-clien
      build:
        context: .
        dockerfile: ./user-client/Dockerfile
        args:
          - VITE_VUE_APP_ENV=development
      environment:
        - VITE_VUE_APP_ENV=development
        - TZ=Asia/Ho_Chi_Minh
      ports:
        - "8002:80"
      restart: unless-stopped
      networks:
        - qipf-network
  elasticsearch:
    container_name: elasticsearch
    restart: unless-stopped
    image: docker.elastic.co/elasticsearch/elasticsearch:8.16.0
    environment:
      - discovery.type=single-node
      - ELASTIC_PASSWORD=1231234
      - ES_JAVA_OPTS=-Xms512m -Xmx512m
      - TZ=Asia/Ho_Chi_Minh
      - xpack.security.enabled=true
    volumes:
      - c:/volumes/shop_app/elasticsearch/data:/usr/share/elasticsearch/data
    ports:
      - "8004:9200"
    networks:
      - qipf-network

  kibana:
    container_name: kibana
    restart: unless-stopped
    image: docker.elastic.co/kibana/kibana:8.16.0
    volumes:
      - c:/volumes/shop_app/kibana/data:/usr/share/kibana/data
    ports:
      - 8005:5601
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
      - ELASTICSEARCH_USERNAME="kibana_system"
      - ELASTICSEARCH_PASSWORD=1231234
    networks:
      - qipf-network
    depends_on:
      - elasticsearch

  # influxdb:
  #   image: influxdb:latest
  #   restart: unless-stopped
  #   ports:
  #     - 8086:8086
  #   volumes:
  #     - influxdb:/var/lib/influxdb2
  #   environment:
  #     - TZ=Asia/Ho_Chi_Minh
  #     - DOCKER_INFLUXDB_INIT_MODE=setup
  #     - DOCKER_INFLUXDB_INIT_USERNAME=influx
  #     - DOCKER_INFLUXDB_INIT_PASSWORD=Anhem123@
  #     - DOCKER_INFLUXDB_INIT_ORG=th-org
  #     - DOCKER_INFLUXDB_INIT_BUCKET=metrics
  #     - DOCKER_INFLUXDB_INIT_ADMIN_TOKEN=influxdbtoken
  #     - DOCKER_INFLUXDB_INIT_RETENTION=10w
  #     - INFLUXD_SESSION_LENGTH=60000 
  #   networks:
  #     - qipf-network

  # aspire-dashboard:
  #   image: mcr.microsoft.com/dotnet/nightly/aspire-dashboard:8.0.0-preview.6
  #   restart: unless-stopped
  #   ports:
  #     - 8386:18888
  #     - 4317:18889
  #   environment:
  #     - TZ=Asia/Ho_Chi_Minh
  #   networks:
  #     - qipf-network
  # mongodb:
  #   container_name: mongodb
  #   image: mongo:latest
  #   restart: unless-stopped
  #   ports:
  #     - 61111:27017
  #   environment:
  #     - MONGO_INITDB_DATABASE=TestDb
  #     - MONGO_INITDB_ROOT_USERNAME=root
  #     - MONGO_INITDB_ROOT_PASSWORD=Anhem123@
  #     - TZ=Asia/Ho_Chi_Minh
  #   volumes:
  #     - mongodatabase:/data
  #   networks:
  #     - qipf-network
  #   extra_hosts:
  #     - "host.docker.internal:host-gateway"
networks:
  qipf-network:
    external: true